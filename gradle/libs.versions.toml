[versions]
agpVersion = "8.3.2"
kotlinVersion = "1.9.0"
coreKtxVersion = "1.10.1"
junitVersion = "5.10.2"
espressoVersion = "3.5.1"
lifecycleRuntimeKtxVersion = "2.6.1"
activityComposeVersion = "1.7.0"
composeBomVersion = "2023.08.00"
composeLifeCycleVersion = "2.6.1"
hiltVersion = "2.50"
androidxHiltVersion = "1.2.0"
coroutineVersion = "1.9.0"
retroFitVersion = "2.9.0"
okHttpInterceptorVersion = "4.12.0"
apolloVersion = "4.1.0"
authVersion = "2.0.1"

[libraries]
#di
daggerHilt = { group = "com.google.dagger", name = "hilt-android", version.ref = "hiltVersion" }
kaptHiltCompiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hiltVersion" }

#shared mutable state/threading
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutineVersion" }

#androidx core: see https://developer.android.com/kotlin/ktx#core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtxVersion" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtxVersion" }

#serialization (such an ugly word, try to remove where possible to avoid security vulnerabilites,imagine some unknown code injecting your serliazed obejects with it's own and uses reflection libraries to pown you)
retrofit-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retroFitVersion" }

#networking
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retroFitVersion" }
okhttpInterceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okHttpInterceptorVersion" }
auth = { group = "com.auth0.android", name = "jwtdecode", version.ref = "authVersion"}
apollo = {group = "com.apollographql.apollo", name = "apollo-runtime", version.ref = "apolloVersion"}

#compose
compose-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidxHiltVersion" }
compose-lifecycle = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "composeLifeCycleVersion" }
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBomVersion" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "activityComposeVersion" }

#testing
junit = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitVersion" }
espresso = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoVersion" }

[plugins]
application-plug = { id = "com.android.application", version.ref = "agpVersion" }
kotlin-plug = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinVersion" }
library-plug = { id = "com.android.library", version.ref = "agpVersion" }
hilt-plug = { id = "com.google.dagger.hilt.android", version.ref = "hiltVersion" }
apollo-plug = { id = "com.apollographql.apollo", version.ref = "apolloVersion" }
#Here are some lable I like to use.
#di
#shared mutable state/threading
#androidx core
#serialization
#networking
#compose
#testing